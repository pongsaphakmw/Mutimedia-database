# Generated by Django 4.0 on 2024-03-21 16:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('athlete_name', models.CharField(max_length=100)),
                ('bib_number', models.IntegerField()),
                ('best_time_score', models.FloatField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('O', 'Other')], max_length=1)),
                ('image_profile', models.ImageField(blank=True, upload_to='athlete_images')),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_name', models.CharField(blank=True, max_length=50, null=True)),
                ('classification_code', models.CharField(max_length=10)),
                ('classification_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100)),
                ('country_code', models.CharField(max_length=3)),
                ('country_flag_image', models.ImageField(upload_to='country_flags')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=100)),
                ('event_time', models.TimeField()),
                ('stage', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('M', 'Men'), ('W', 'Women'), ('O', 'Other')], default='O', max_length=1)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
            ],
            options={
                'unique_together': {('event_time', 'stage', 'gender')},
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('result', models.CharField(default='On Going', max_length=50)),
                ('score', models.FloatField(blank=True, null=True)),
                ('medal', models.CharField(choices=[('Gold', 'Gold'), ('Silver', 'Silver'), ('Bronze', 'Bronze'), ('None', 'None')], default='None', max_length=10)),
                ('athlete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.athlete')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.event')),
            ],
        ),
        migrations.AddField(
            model_name='athlete',
            name='classification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='webapp.classification'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='webapp.country'),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.DateField()),
                ('time', models.CharField(choices=[('M', 'Morning'), ('A', 'Afternoon'), ('E', 'Evening')], max_length=1)),
                ('event', models.ManyToManyField(to='webapp.Event')),
            ],
            options={
                'unique_together': {('day', 'time')},
            },
        ),
    ]
